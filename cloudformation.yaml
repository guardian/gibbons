AWSTemplateFormatVersion: "2010-09-09"
Description: Lambdas for handling expired CAPI keys
Parameters:
    Stack:
        Description: Stack name
        Type: String
        Default: content-api-gibbons
    App:
        Description: Application name
        Type: String
        Default: gibbons
    Stage:
        Description: Stage name
        Type: String
        AllowedValues:
            - PROD
            - CODE
        Default: CODE
    KongSecurityGroupId:
        Description: Security group to access Kong's LB
        Type: AWS::EC2::SecurityGroup::Id
    KongSubnetId:
        Description: Subnet to access Kong's LB
        Type: List<AWS::EC2::Subnet::Id>
    KongBasePath:
        Description: Base URL for querying Kong
        Type: String
    Origin:
        Description: Origin email address as set up in SES
        Type: String
    BonoboListUrl:
        Description: Bonobo URL for listing user's keys
        Type: String
    BonoboDeleteUrl:
        Description: Bonobo URL for deleting a key
        Type: String
    Nonce:
        Description: Secret see to hash IDs
        Type: String

Resources:
    LambdaRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Statement:
                    - Effect: Allow
                      Principal:
                          Service:
                             - lambda.amazonaws.com
                      Action:
                          - sts:AssumeRole
            Path: /
            Policies:
                - PolicyName: LambdaPolicy
                  PolicyDocument:
                      Statement:
                          - Effect: Allow
                            Action:
                                - logs:CreateLogGroup
                                - logs:CreateLogStream
                                - logs:PutLogEvents
                            Resource: "*"
                          - Effect: Allow
                            Action:
                                - dynamodb:Query
                                - dynamodb:Scan	
                                - dynamodb:GetItem
                                - dynamodb:DeleteItem
                                - dynamodb:UpdateItem
                            Resource:
                                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/bonobo-${Stage}-keys
                                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/bonobo-${Stage}-users
                          - Effect: Allow
                            Action:
                                - ses:SendEmail
                            Resource:
                                - "*"
                            Condition:
                                StringEquals:
                                    ses:FromAddress: !Ref Origin
                          - Effect: Allow
                            Action:
                                - ec2:CreateNetworkInterface
                                - ec2:DescribeNetworkInterfaces
                                - ec2:DeleteNetworkInterface
                            Resource: "*"

    ScheduledLambda:
        Type: AWS::Lambda::Function
        Properties:
            FunctionName:
                !Sub gibbons-${Stage}
            Environment:
                Variables:
                    KONG_BASE_PATH: !Ref KongBasePath
                    EMAIL_ORIGIN: !Ref Origin
                    GATEWAY_API_SECRET: !Ref Nonce
                    BONOBO_LIST_URL: !Ref BonoboListUrl
                    BONOBO_DELETE_URL: !Ref BonoboDeleteUrl
                    BONOBO_USERS_TABLE: !Sub bonobo-${Stage}-users
                    BONOBO_KEYS_TABLE: !Sub bonobo-${Stage}-keys
            Code:
                S3Bucket: content-api-dist
                S3Key:
                    !Sub ${Stack}/${Stage}/${App}/${App}.jar
            Description: Lambda for sending email reminders to people owning old keys
            Handler: com.gu.gibbons.lambdas.ScheduledLambda::handleRequest
            MemorySize: 512
            Role: !Sub ${LambdaRole.Arn}
            Runtime: java8
            Timeout: 300
            # VpcConfig:
            #     SecurityGroupIds:
            #         - !Ref KongSecurityGroupId
            #     SubnetIds: !Ref KongSubnetId
        DependsOn: LambdaRole

